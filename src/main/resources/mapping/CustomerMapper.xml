<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ntech.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.ntech.model.Customer">
    <id column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="contype" jdbcType="VARCHAR" property="contype" />
    <result column="active" jdbcType="INTEGER" property="active" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="regtime" jdbcType="TIMESTAMP" property="regtime" />
    <result column="face_number" jdbcType="INTEGER" property="faceNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    name, password, contype, active, email, token, regtime, face_number
  </sql>
  <select id="selectByExample" parameterType="com.ntech.model.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from customer
    where name = #{name,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ntech.model.CustomerExample">
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ntech.model.Customer">
    insert into customer (name, password, contype, 
      active, email, token, 
      regtime, face_number)
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{contype,jdbcType=VARCHAR}, 
      #{active,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, 
      #{regtime,jdbcType=TIMESTAMP}, #{faceNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ntech.model.Customer">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="contype != null">
        contype,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="regtime != null">
        regtime,
      </if>
      <if test="faceNumber != null">
        face_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="contype != null">
        #{contype,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        #{active,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null">
        #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="faceNumber != null">
        #{faceNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ntech.model.CustomerExample" resultType="java.lang.Long">
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer
    <set>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.contype != null">
        contype = #{record.contype,jdbcType=VARCHAR},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.regtime != null">
        regtime = #{record.regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.faceNumber != null">
        face_number = #{record.faceNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer
    set name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      contype = #{record.contype,jdbcType=VARCHAR},
      active = #{record.active,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR},
      regtime = #{record.regtime,jdbcType=TIMESTAMP},
      face_number = #{record.faceNumber,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ntech.model.Customer">
    update customer
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="contype != null">
        contype = #{contype,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null">
        regtime = #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="faceNumber != null">
        face_number = #{faceNumber,jdbcType=INTEGER},
      </if>
    </set>
    where name = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ntech.model.Customer">
    update customer
    set password = #{password,jdbcType=VARCHAR},
      contype = #{contype,jdbcType=VARCHAR},
      active = #{active,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      regtime = #{regtime,jdbcType=TIMESTAMP},
      face_number = #{faceNumber,jdbcType=INTEGER}
    where name = #{name,jdbcType=VARCHAR}
  </update>


  <select id="findPage" resultMap="BaseResultMap">

    select * from customer
      where  contype != "1"
    limit #{offset},#{limit}
  </select>
  <select id="findLikeName" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT  * from customer where name LIKE #{name}
  </select>

</mapper>