<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ntech.dao.LogMapper">
  <resultMap id="BaseResultMap" type="com.ntech.model.Log">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="result" jdbcType="INTEGER" property="result" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, content, result, time
  </sql>
  <select id="selectByExample" parameterType="com.ntech.model.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ntech.model.LogExample">
    delete from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ntech.model.Log">
    insert into log (id, user_name, content, 
      result, time)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{result,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ntech.model.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ntech.model.LogExample" resultType="java.lang.Long">
    select count(*) from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log
    set id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ntech.model.Log">
    update log
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ntech.model.Log">
    update log
    set user_name = #{userName,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      result = #{result,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="findPage" resultMap="BaseResultMap">
    select * from log limit #{offset},#{limit}
  </select>

  <select id="findWithLimit" resultMap="BaseResultMap">
    select * from  log where user_name=#{name} order by time desc limit #{offset},#{limit}
  </select>

  <!-- 按条件分页查询-->
<select id="findWithConditions" resultMap="BaseResultMap">
   SELECT  * from log where 1=1
  <if test="name!=null">
    AND  user_name LIKE  concat('%',#{name},'%')
  </if>
  <if test="type!=null">
    AND content LIKE concat('%',#{type},'%')
  </if>
  <if test="start!=null">
    AND  time&gt;=#{start}
  </if>
  <if test="end!=null">
    AND  time&lt;=#{end}
  </if>
  limit #{offset},#{limit}
</select>
  <!--查出总数-->
  <select id="findCount" resultType="java.lang.Long">
    SELECT  count(*) from log where 1=1
    <if test="name!=null">
      AND  user_name LIKE  concat('%',#{name},'%')
    </if>
    <if test="type!=null">
      AND content LIKE concat('%',#{type},'%')
    </if>
    <if test="start!=null">
      AND  time&gt;=#{start}
    </if>
    <if test="end!=null">
      AND  time&lt;=#{end}
    </if>
  </select>
</mapper>